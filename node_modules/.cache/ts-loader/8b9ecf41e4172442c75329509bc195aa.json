{"remainingRequest":"C:\\Users\\Jonathan\\Documents\\GitHub\\RogueChampions\\RogueChampions\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Jonathan\\Documents\\GitHub\\RogueChampions\\RogueChampions\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\Jonathan\\Documents\\GitHub\\RogueChampions\\RogueChampions\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Jonathan\\Documents\\GitHub\\RogueChampions\\RogueChampions\\src\\lib\\game.ts","dependencies":[{"path":"C:\\Users\\Jonathan\\Documents\\GitHub\\RogueChampions\\RogueChampions\\src\\lib\\game.ts","mtime":1629965911774},{"path":"C:\\Users\\Jonathan\\Documents\\GitHub\\RogueChampions\\RogueChampions\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Jonathan\\Documents\\GitHub\\RogueChampions\\RogueChampions\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Jonathan\\Documents\\GitHub\\RogueChampions\\RogueChampions\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Jonathan\\Documents\\GitHub\\RogueChampions\\RogueChampions\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Jonathan\\Documents\\GitHub\\RogueChampions\\RogueChampions\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Jonathan\\Documents\\GitHub\\RogueChampions\\RogueChampions\\src\\lib\\game.ts"],"names":[],"mappings":"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","sourcesContent":["import {Game} from \"@/types/game\";\r\nimport {VillainsList, VillainsMap} from \"@/consts/villains\";\r\nimport {ExpansionsMap} from \"@/consts/expansions\";\r\nimport {getRandomInt, percentChance, randomItem, randomItemsExcluding} from \"@/lib/random\";\r\nimport {Villain} from \"@/types/villain\";\r\nimport {EncounterSetsMap, EncounterSetsList, Expert} from \"@/consts/encountersets\";\r\nimport {randomChallenge} from \"@/consts/challenges\";\r\nimport {EncounterSet} from \"@/types/encounterset\";\r\nimport {GameOption} from \"@/types/gameoption\";\r\nimport {UpgradeCategoriesList} from \"@/consts/upgrades\";\r\nimport {UpgradeCategory} from \"@/types/upgrade\";\r\nimport {Expansion} from \"@/types/expansion\";\r\n\r\ninterface HasDifficulty {\r\n    difficulty: number\r\n}\r\n\r\nexport const generateTargetGame = (minDifficulty: number, maxDifficulty: number, expansions: Array<Expansion>): Game => {\r\n    let count = 0\r\n    const maxTries = 500\r\n\r\n    const localList: Array<Villain> = [];\r\n    VillainsList.forEach(villain => {\r\n        expansions.forEach(expansion => {\r\n            if (expansion.encounterSets.includes(villain.name)) {\r\n                localList.push(villain);\r\n            }\r\n\r\n        })\r\n    })\r\n\r\n    const villain = randomItem(localList)\r\n    let closest: Game = generateGame(villain, expansions)\r\n    const targetDifficulty = (minDifficulty + maxDifficulty) / 2\r\n    do {\r\n        count++\r\n        const villain = randomItem(localList)\r\n        const contender = generateGame(villain, expansions)\r\n\r\n        // First one in the range we return\r\n        if (contender.difficulty <= maxDifficulty && contender.difficulty >= minDifficulty) {\r\n            //console.log(contender)\r\n        }\r\n\r\n        const currentScore = Math.abs(closest.difficulty - targetDifficulty)\r\n        const contenderScore = Math.abs(contender.difficulty - targetDifficulty)\r\n        if (contenderScore < currentScore) {\r\n            closest = contender\r\n        }\r\n    } while (count < maxTries);\r\n\r\n    return closest\r\n}\r\n\r\nexport const generateGameOption = (minDifficulty: number, maxDifficulty: number, existingUpgrades: UpgradeCategory[], expansions: Array<Expansion>): GameOption => {\r\n    const types = randomItemsExcluding<UpgradeCategory>(2, UpgradeCategoriesList, [], existingUpgrades)\r\n    const game = generateTargetGame(minDifficulty, maxDifficulty, expansions)\r\n    game.rewardTypes = types\r\n    return {\r\n        game: game\r\n    }\r\n}\r\n\r\nexport const generateGame = (villain: Villain, expansions: Array<Expansion>): Game => {\r\n    // Each villain has their own list of sets that must be included\r\n    const sets = villain.sets.map((name) => {\r\n        const set = EncounterSetsList.find((e: any) => e.name == name)\r\n        if (!set) {\r\n            throw new Error('cant find villain\\'s encounter set')\r\n        }\r\n        return set\r\n    })\r\n\t\r\n\tlet modchance = 20;\r\n\r\n    if (!villain.noExtraSets) {\r\n        // Each game gets one random encounter automatically\r\n        // We loop until we find one that ISN'T part of their villain's base encounter set\r\n\t\t\r\n        for (let i = 0; i <= villain.extraSets; i++) {\r\n            let randomSet: EncounterSet\r\n            let noLoop = 0;\r\n\r\n            const localSet: Array<EncounterSet> = [];\r\n            EncounterSetsList.forEach(set => {\r\n                expansions.forEach(expansion => {\r\n                    if (expansion.encounterSets.includes(set.name)) {\r\n                        localSet.push(set);\r\n                    }\r\n                })\r\n            })\r\n            do {\r\n                noLoop++\r\n\r\n                randomSet = randomItem(localSet)\r\n            } while (randomSet.boss || sets.findIndex(s => s.name == randomSet.name) != -1 && noLoop < 10000)\r\n            sets.push(randomSet)\r\n\t\t\r\n\t\t//Adding 20% chance of an extra modular set going down b 5% each time\r\n\t\tif(percentChance(modchance)) {\r\n\t\t\ti--;\r\n\t\t\tmodchance -= 5;\r\n\t\t\t}\r\n        }\r\n    }\r\n\r\n    // If expert isn't in there, there's a 10% chance to add it\r\n    if (sets.findIndex(val => val.name == Expert.name) == -1) {\r\n        if (percentChance(10)) {\r\n            sets.push(Expert)\r\n        }\r\n    }\r\n\r\n    const game: Game = {\r\n        villain: villain,\r\n        rewardTypes: [],\r\n        status: 'next',\r\n        number: 0,\r\n        encounterSets: sets,\r\n        difficulty: 0,\r\n        challenges: [],\r\n        heroLevel: 0,\r\n        id: ''\r\n    }\r\n\r\n    /*// 10% chance for hero level 1\r\n    if (percentChance(10)) {\r\n        game.heroLevel++\r\n    }*/\r\n\r\n    // Challenges are custom setup things that make it harder\r\n    // They aren't part of the core game\r\n    // There's a base chance to get one challenge\r\n    // We keep reducing that chance by 10% and trying again, on a loop\r\n    // The loop stops if you ever fail to get a challenge\r\n    let challengePercent = 50\r\n    while (percentChance(challengePercent)) {\r\n        const challenge = randomChallenge()\r\n        game.challenges.push(challenge)\r\n        challengePercent -= 10\r\n    }\r\n\r\n    game.difficulty = getGameDifficulty(game)\r\n    game.id = getGameId(game)\r\n    return game\r\n}\r\n\r\nexport const generateGames = (expansions: Array<Expansion>): Game[] => {\r\n    const possibleVillainKeys = VillainsList.map((v: Villain) => v.key)\r\n    const numGames = 5\r\n\r\n    const villainKeys: string[] = randomItemsExcluding<string>(numGames, possibleVillainKeys, [])\r\n\r\n    const games: Game[] = []\r\n\r\n    // To try to make these less spikey, we're generating many different games randomly\r\n    // Then we're ordering them by their difficulty, and picking one from a different place\r\n    // in the list for each game in the run\r\n    for (var i = 0; i < 500; i++) {\r\n        villainKeys.forEach((key, idx) => {\r\n            const villain = VillainsMap[key]\r\n            const game = generateGame(villain,expansions)\r\n            games.push(game)\r\n        })\r\n    }\r\n\r\n    const sorted = games.sort((a, b) => {\r\n        return a.difficulty < b.difficulty ? -1 : 1\r\n    })\r\n\r\n    const pageSize = Math.floor(sorted.length / numGames)\r\n\r\n    const chosen = []\r\n    for (var i = 1; i <= numGames; i++) {\r\n        const min = (i - 1) * pageSize\r\n        const max = min + pageSize\r\n        chosen.push(sorted[getRandomInt(min, max)])\r\n    }\r\n    return chosen\r\n}\r\n\r\nexport const getGameDifficulty = (game: Game): number => {\r\n    let diff = game.villain.difficulty\r\n    let multiplier = 1\r\n    game.encounterSets.forEach((set) => {\r\n        diff += set.difficulty\r\n    })\r\n\r\n    game.challenges.forEach((cha) => {\r\n        diff += cha.difficulty\r\n    })\r\n\r\n    diff *= multiplier\r\n\r\n    diff += diff * (game.heroLevel * 1.25) // 25% harder for each hero level\r\n\r\n    return Math.round(diff)\r\n}\r\n\r\nexport const getGameId = (game: Game): string => {\r\n    return [\r\n        game.villain.name,\r\n        game.encounterSets.map(ec => ec.name).join('-'),\r\n        game.challenges.map(c => c.name).join('-')\r\n    ].join('_')\r\n}"],"sourceRoot":""}]}